# -*- coding: utf-8 -*-
"""Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qr8gX-KG3Id__xZYJYrTn409Iwn_FrL-
"""

import pandas as pd
import joblib
import os
from sklearn.preprocessing import LabelEncoder
import seaborn as sns
import matplotlib.pyplot as plt

def preprocess_data(df, label_encoders):
    df_processed = df.copy()
    if 'Attrition' in df_processed.columns:
        df_processed = df_processed.drop('Attrition', axis=1)
    for column, le in label_encoders.items():
        if column in df_processed.columns:
            df_processed[column] = le.transform(df_processed[column])
    return df_processed

def predict_attrition(input_data, model_path='/content/attrition_model.pkl', encoder_path='/content/label_encoders.pkl'):
    model = joblib.load(model_path)
    label_encoders = joblib.load(encoder_path)

    processed_data = preprocess_data(input_data, label_encoders)

    predictions = model.predict(processed_data)
    probabilities = model.predict_proba(processed_data)[:, 1]

    result = input_data.copy()
    result['Predicted_Attrition'] = predictions
    result['Attrition_Probability'] = probabilities

    return result

if __name__ == "__main__":
    new_data = pd.read_csv('/content/employee_data.csv')

    label_encoders = joblib.load('/content/label_encoders.pkl')

    new_data = new_data.dropna(subset=[col for col in new_data.columns if col in label_encoders.keys()])

    predictions = predict_attrition(new_data)

    predictions.to_csv('predictions_output.csv', index=False)
    print("Prediksi berhasil disimpan ke 'predictions_output.csv'.")

    print("\nHasil Prediksi untuk Data Baru (10 baris pertama):")
    print(predictions.head(10).to_string(index=False))

    print("\nRingkasan Prediksi:")
    print("Jumlah total prediksi:", len(predictions))
    print("Jumlah prediksi Attrition (1):", sum(predictions['Predicted_Attrition']))

    print("\nContoh Data dengan Prediksi Attrition (1):")
    positive_predictions = predictions[predictions['Predicted_Attrition'] == 1]
    if not positive_predictions.empty:
        print(positive_predictions.head().to_string(index=False))
    else:
        print("Tidak ada prediksi Attrition (1).")

    plt.figure(figsize=(8, 5))
    sns.histplot(predictions['Attrition_Probability'], bins=20, kde=True)
    plt.title('Distribusi Probabilitas Prediksi Attrition')
    plt.xlabel('Probabilitas Attrition')
    plt.ylabel('Frekuensi')
    plt.savefig('attrition_probability_distribution.png')
    plt.show()
    print("Visualisasi distribusi probabilitas telah disimpan ke 'attrition_probability_distribution.png'.")

